plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id "jacoco"
    id "org.sonarqube" version "3.4.0.2513"
}

sonarqube {
    properties {
        property "sonar.projectKey", "project_S3"
        property "sonar.qualitygate.wait", true
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": "com.example.individual.IndividualApplication"
    }

//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
}

//jar {
//    manifest {
//        attributes(
//                'Main-Class': 'com.example.individual.IndividualApplication'
//        )
//    }
//}
